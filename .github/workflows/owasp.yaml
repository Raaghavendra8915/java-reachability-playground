name: Complete DevSecOps CI/CD pipeline

on: push

jobs:
  sast-scan:
    runs-on: ubuntu-latest
    name: Run SonarQube with Maven
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven and analyze with SonarQube
        run:  mvn -B verify sonar:sonar -Dsonar.projectKey=sonardemotesting -Dsonar.organization=sonardemotesting -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sca-scan:
    needs: sast-scan
    runs-on: ubuntu-latest
    name: Maven using Snyk security scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true 
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }}

  Build-image-publish-to-ecr:
    needs: sca-scan
    runs-on: ubuntu-latest
    name: Build Image Publish to ECR
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  # Updated to use a more recent version

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: devsecops
          IMAGE_TAG: 1.0.0
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '767397705569.dkr.ecr.us-west-2.amazonaws.com/devsecops:1.0.0'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '767397705569.dkr.ecr.us-west-2.amazonaws.com/devsecops:1.0.0'
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          #exit-code: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2

  Scan-for-secrets:
   runs-on: ubuntu-latest 
   steps:
     - uses: actions/checkout@v2
     - name: Install Whispers
       run: sudo pip install whispers
       
     # Scan repo for secrets
     - name: Run scanner for the repository
       run: whispers ${{ github.workspace }} > /tmp/scan_output.json

     # Upload Artifacts
     - name: Upload the scan output
       uses: actions/upload-artifact@v2
       with:
         name: scan_results
         path: /tmp/scan_output.json
         retention-days: 2

 
          
      
        
  

      
